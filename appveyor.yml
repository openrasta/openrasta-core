configuration: Release
#platform: Any CPU
image: Visual Studio 2017

install:
  - set PATH=C:\Ruby23\bin;%PATH%
  - ps: $AllProtocols = [System.Net.SecurityProtocolType]'Ssl3,Tls,Tls11,Tls12'
  - ps: "[System.Net.ServicePointManager]::SecurityProtocol = $AllProtocols"
  - ps: mkdir c:\ca; iwr https://curl.haxx.se/ca/cacert.pem -outfile C:\ca\cacert.pem
  - set SSL_CERT_FILE=C:\ca\cacert.pem
  - ps: |
        $version = [version]$(cat VERSION)
        $build = $env:APPVEYOR_BUILD_NUMBER
        $major = $version.Major
        
        $branch = $env:APPVEYOR_REPO_BRANCH
        if ($branch -eq 'master') {
          $version = "$version-ci-$build"
        } elseif ($env:APPVEYOR_REPO_TAG) {
          $version = $env:APPVEYOR_REPO_TAG_NAME
        } elseif ($env:APPVEYOR_PULL_REQUEST_NUMBER) {
          $version = "$version-pr-$env:APPVEYOR_PULL_REQUEST_NUMBER-$build"
        }
        else {
          $version = "$version-br-$branch-$build"
        }
        Set-AppveyorBuildVariable -Name "AssemblyMajor" -Value "$major"
        Update-AppVeyorBuild -Version "$version"
        Write-Output "$version"

  - gem install chandler --no-ri --no-rdoc
  - ps: set-content ~/.netrc "machine api.github.com login $env:github_username password $env:github_password" -encoding ascii
  - ps: cp ~/.netrc ~/_netrc
  - ps: if (-not $env:APPVEYOR_PULL_REQUEST_NUMBER) {chandler push }

#assembly_info:
  #patch: true
  #file: src\CommonInfo.cs
  #assembly_version: $(AssemblyMajor).0.0.0
  #assembly_file_version: '{version}'
  #assembly_informational_version: '{version}'

before_build:
  - cmd: set PATH=C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\MSBuild\15.0\Bin;C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\MSBuild\15.0\Bin;C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\MSBuild\15.0\Bin;%PATH%
  - nuget restore


nuget:
  project_feed: true
  disable_publish_on_pr: true

dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '{version}'
  assembly_version: $(AssemblyMajor).0.0.0
  file_version: '{version}'
  informational_version: '{version}'

build:
  parallel: true
  verbosity: minimal
  publish_nuget: true
  publish_nuget_symbols: true
  include_nuget_references: true

environment:
  SSL_CERT_FILE: C:\ca\cacert.pem
  github_username: serialseb
  github_password:
    secure:
      1lXaOJ0GvCAOd0O9DDvVqw2eb7TvP2jve12u3hD2g4J7RVW2c2jC5XuRFyEuduUA
artifacts:
- path: src\openrasta\bin\$(configuration)\**\*.dll
  name: dlls
- path: src\openrasta\bin\$(configuration)\**\*.pdb
  name: pdbs
